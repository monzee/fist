apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api project(':fist-android')
    compileOnly 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
}

publishing {
    repositories.maven {
        name 'bintray'
        url 'https://api.bintray.com/maven/monzee/jvm/fist-kt-android/'
        credentials {
            username = BINTRAY_USER
            password = BINTRAY_API_KEY
        }
    }

    android.libraryVariants.matching { it.buildType.name == 'release' }.all {
        def stem = name.capitalize()
        def hardDeps = variantData.variantDependency.apiElements.allDependencies
        def allDeps = variantData.variantDependency.runtimeElements.allDependencies
        def docs = task(
                "javadoc$stem",
                dependsOn: ':fist-core:javadoc',
                type: Javadoc,
                group: 'documentation'
        ) {
            source = javaCompile.source
            classpath += javaCompile.classpath + files(android.bootClasspath)
            title = 'Fist Kotlin Android'
            options {
                links '../../../../fist-core/build/docs/javadoc'
                links 'https://developer.android.com/reference'
            }
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }

        publications.create(name, MavenPublication) {
            artifact source: outputs[0].outputFile, builtBy: assemble

            artifact task("jar${stem}Sources", type: Jar, group: 'publishing') {
                classifier 'sources'
                from javaCompile.source
            }

            artifact task("jar${stem}Javadoc", type: Jar, dependsOn: docs, group: 'publishing') {
                classifier 'javadoc'
                from docs.destinationDir
            }

            pom.withXml {
                def contents = asNode().children().last()
                contents + pomMetadata(
                        name: 'Fist Kotlin Android',
                        description: 'Kotlin extensions for fist-android',
                        url: 'https://github.com/monzee/fist'
                )
                contents + node {
                    dependencies {
                        allDeps.each { dep ->
                            dependency {
                                groupId dep.group
                                artifactId dep.name
                                version dep.version
                                if (!(dep in hardDeps)) {
                                    scope 'provided'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
