apply plugin: 'com.android.library'
apply plugin: 'digital.wup.android-maven-publish'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "v$LIBRARY_VERSION"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(':fist-core')
    compileOnly 'androidx.appcompat:appcompat:1.1.0-alpha01'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

publishing {
    repositories.maven {
        name 'bintray'
        url 'https://api.bintray.com/maven/monzee/jvm/fist-android/'
        credentials {
            username = BINTRAY_USER
            password = BINTRAY_API_KEY
        }
    }

    android.libraryVariants.matching { it.buildType.name == 'release' }.all {
        def stem = name.capitalize()

        def docs = tasks.register("javadoc$stem", Javadoc) {
            dependsOn ':fist-core:javadoc'
            group 'documentation'
            source sourceSets.java.sourceFiles
            classpath += javaCompileProvider.get().classpath + files(android.bootClasspath)
            title 'Fist Android'
            options {
                links '../../../../fist-core/build/docs/javadoc'
                links 'https://developer.android.com/reference'
            }
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }

        def docsJar = tasks.register("jar${stem}Javadoc", Jar) {
            group 'publishing'
            from docs.get().destinationDir
            classifier 'javadoc'
        }

        def sourceJar = tasks.register("jar${stem}Sources", Jar) {
            group 'publishing'
            from sourceSets.java.srcDirs
            classifier 'sources'
        }

        publications.register(name, MavenPublication) {
            from components.android
            artifact sourceJar.get()
            artifact docsJar.get()
            pom {
                name = 'Fist Android'
                description = 'Android implementation of the async abstract machines and samples'
                url = 'https://github.com/monzee/fist'
                developers {
                    developer {
                        id = 'monzee'
                        name = 'Mon Zafra'
                        email = 'mz@codeia.ph'
                        organization = 'Codeia Inc'
                        organizationUrl = 'https://codeia.ph'
                    }
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/license.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/monzee/fist'
                    connection = 'scm:git:https://github.com/monzee/fist.git'
                    developerConnection = 'scm:git:ssh://git@github.com:monzee/fist.git'
                }
            }
        }
    }
}
